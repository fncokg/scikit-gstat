name: Test and build docs

on:
  - push
  - pull_request

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
   name: Run Unittest
   runs-on: ubuntu-22.04
   strategy:
    matrix:
      python: ['3.9', '3.10', '3.11', '3.12', '3.13']

   steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install Python ${{ matrix.python }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python }}
      - name: Install SciKit-GStat
        run: |
          pip3 install -r requirements.txt
          python3 setup.py install
      - name: Install PyTest requirements
        run: pip3 install -r "requirements.unittest.${{ matrix.python }}.txt"
      - name: Run tests
        run: pytest --cov-config=.coveragerc --cov=./ --cov-report=xml
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          env_vars: OS, PYTHON

  docs:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install Python
        uses: actions/setup-python@master
        with:
          python-version: '3.12'
      - name: Install SciKit-GStat
        run: |
          pip3 install -r requirements.txt
          python3 setup.py install
      - name: Install Sphinx requirements
        run: pip3 install -r requirements.rtd.txt
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build HTML docs
        run: |
          cd docs
          make html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docs
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: Create Github release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.event.ref, 'refs/tags/v') && endsWith(github.event.ref, '.0')

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE.md
          generate_release_notes: true

  publish:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.event.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@master
    - name: Set up Python
      uses: actions/setup-python@master
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}

  ci_develop:
    name: Print Github Context for Development
    runs-on: ubuntu-22.04
    if: true

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
